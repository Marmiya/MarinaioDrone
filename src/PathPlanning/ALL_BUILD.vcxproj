<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9A9984A7-92C2-3981-A0C6-F0204EF8DD68}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.7.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\SSD\GitProject\AirSim\AirLib\include;C:\src\vcpkg\installed\x64-windows\include\eigen3;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\include;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning\cuda;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning;C:\ProjBuild\MarinaioDrone\include;C:\ProjBuild\MarinaioDrone\src\PathPlanning;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\SSD\GitProject\AirSim\AirLib\include;C:\src\vcpkg\installed\x64-windows\include\eigen3;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\include;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning\cuda;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning;C:\ProjBuild\MarinaioDrone\include;C:\ProjBuild\MarinaioDrone\src\PathPlanning;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\SSD\GitProject\AirSim\AirLib\include;C:\src\vcpkg\installed\x64-windows\include\eigen3;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\include;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning\cuda;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning;C:\ProjBuild\MarinaioDrone\include;C:\ProjBuild\MarinaioDrone\src\PathPlanning;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\SSD\GitProject\AirSim\AirLib\include;C:\src\vcpkg\installed\x64-windows\include\eigen3;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\include;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning\cuda;C:\SSD\GitProject\MarinaioDrone\src\PathPlanning;C:\ProjBuild\MarinaioDrone\include;C:\ProjBuild\MarinaioDrone\src\PathPlanning;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\SSD\GitProject\MarinaioDrone\src\PathPlanning\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/SSD/GitProject/MarinaioDrone/src/PathPlanning/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/SSD/GitProject/MarinaioDrone -BC:/ProjBuild/MarinaioDrone --check-stamp-file C:/ProjBuild/MarinaioDrone/src/PathPlanning/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\CompilerInfo.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA\select_compute_arch.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindOptiX.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\Macros.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\sampleConfig.h.in;C:\ProjBuild\MarinaioDrone\CMakeFiles\3.23.0-rc1\CMakeCUDACompiler.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-namespaced-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config-version.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\ProjBuild\MarinaioDrone\src\PathPlanning\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/SSD/GitProject/MarinaioDrone/src/PathPlanning/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/SSD/GitProject/MarinaioDrone -BC:/ProjBuild/MarinaioDrone --check-stamp-file C:/ProjBuild/MarinaioDrone/src/PathPlanning/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\CompilerInfo.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA\select_compute_arch.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindOptiX.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\Macros.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\sampleConfig.h.in;C:\ProjBuild\MarinaioDrone\CMakeFiles\3.23.0-rc1\CMakeCUDACompiler.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-namespaced-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config-version.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\ProjBuild\MarinaioDrone\src\PathPlanning\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/SSD/GitProject/MarinaioDrone/src/PathPlanning/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/SSD/GitProject/MarinaioDrone -BC:/ProjBuild/MarinaioDrone --check-stamp-file C:/ProjBuild/MarinaioDrone/src/PathPlanning/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\CompilerInfo.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA\select_compute_arch.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindOptiX.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\Macros.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\sampleConfig.h.in;C:\ProjBuild\MarinaioDrone\CMakeFiles\3.23.0-rc1\CMakeCUDACompiler.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-namespaced-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config-version.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\ProjBuild\MarinaioDrone\src\PathPlanning\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/SSD/GitProject/MarinaioDrone/src/PathPlanning/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/SSD/GitProject/MarinaioDrone -BC:/ProjBuild/MarinaioDrone --check-stamp-file C:/ProjBuild/MarinaioDrone/src/PathPlanning/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCUDAInformation.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.23\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\CompilerInfo.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindCUDA\select_compute_arch.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\FindOptiX.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\CMake\Macros.cmake;C:\ProgramData\NVIDIA Corporation\OptiX SDK 7.5.0\SDK\sampleConfig.h.in;C:\ProjBuild\MarinaioDrone\CMakeFiles\3.23.0-rc1\CMakeCUDACompiler.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-namespaced-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncpp-targets.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\jsoncpp\jsoncppConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\nanoflann\nanoflannTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfig.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinConfigVersion.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\pangolin\PangolinTargets.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config-version.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-config.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-debug.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets-release.cmake;C:\src\vcpkg\installed\x64-windows\share\tinyxml2\tinyxml2-shared-targets.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\ProjBuild\MarinaioDrone\src\PathPlanning\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\ProjBuild\MarinaioDrone\ZERO_CHECK.vcxproj">
      <Project>{13CA1C76-10F5-3D8D-9156-62E59A81A2AE}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\ProjBuild\MarinaioDrone\src\PathPlanning\PathPlanning.vcxproj">
      <Project>{4C6C7817-FE5A-3F34-BAE7-00E8C0F94931}</Project>
      <Name>PathPlanning</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.7.targets" />
  </ImportGroup>
</Project>